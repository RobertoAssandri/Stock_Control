//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "BrandProduct", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Brand), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Product), true)]
[assembly: EdmRelationshipAttribute("Model", "SuplierSuplierPhone", "Suplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Suplier), "SuplierPhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.SuplierPhone), true)]
[assembly: EdmRelationshipAttribute("Model", "SuplierSuplierMail", "Suplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Suplier), "SuplierMail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.SuplierMail), true)]
[assembly: EdmRelationshipAttribute("Model", "OfficeOfficePhone", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Office), "OfficePhone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.OfficePhone))]
[assembly: EdmRelationshipAttribute("Model", "OfficeOfficeMail", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Office), "OfficeMail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.OfficeMail))]
[assembly: EdmRelationshipAttribute("Model", "FamilyProductsFamilies", "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Family), "ProductsFamilies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ProductsFamilies), true)]
[assembly: EdmRelationshipAttribute("Model", "ProductProductsFamilies", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Product), "ProductsFamilies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ProductsFamilies), true)]
[assembly: EdmRelationshipAttribute("Model", "ProductProductsOffices", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Product), "ProductsOffices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.OfficeStock), true)]
[assembly: EdmRelationshipAttribute("Model", "OfficeProductsOffices", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Office), "ProductsOffices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.OfficeStock), true)]
[assembly: EdmRelationshipAttribute("Model", "ProductProductPrice", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Product), "ProductPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ProductPrice), true)]
[assembly: EdmRelationshipAttribute("Model", "SuplierProductPrice", "Suplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Suplier), "ProductPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ProductPrice), true)]
[assembly: EdmRelationshipAttribute("Model", "ProductOnlineProduct", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Product), "OnlineProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entities.OnlineProduct))]
[assembly: EdmRelationshipAttribute("Model", "ProductShipmentShipmentStock", "ProductShipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Shipment), "ShipmentStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ShipmentProductStock), true)]
[assembly: EdmRelationshipAttribute("Model", "ProductShipmentStock", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Product), "ShipmentStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.ShipmentProductStock), true)]
[assembly: EdmRelationshipAttribute("Model", "InboundShipment", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Office), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Shipment))]
[assembly: EdmRelationshipAttribute("Model", "OutboundShipment", "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Office), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Shipment))]

#endregion

namespace Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelContainer object using the connection string found in the 'ModelContainer' section of the application configuration file.
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brand> BrandSet
        {
            get
            {
                if ((_BrandSet == null))
                {
                    _BrandSet = base.CreateObjectSet<Brand>("BrandSet");
                }
                return _BrandSet;
            }
        }
        private ObjectSet<Brand> _BrandSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Family> FamilySet
        {
            get
            {
                if ((_FamilySet == null))
                {
                    _FamilySet = base.CreateObjectSet<Family>("FamilySet");
                }
                return _FamilySet;
            }
        }
        private ObjectSet<Family> _FamilySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> ProductSet
        {
            get
            {
                if ((_ProductSet == null))
                {
                    _ProductSet = base.CreateObjectSet<Product>("ProductSet");
                }
                return _ProductSet;
            }
        }
        private ObjectSet<Product> _ProductSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Suplier> SuplierSet
        {
            get
            {
                if ((_SuplierSet == null))
                {
                    _SuplierSet = base.CreateObjectSet<Suplier>("SuplierSet");
                }
                return _SuplierSet;
            }
        }
        private ObjectSet<Suplier> _SuplierSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SuplierPhone> SuplierPhoneSet
        {
            get
            {
                if ((_SuplierPhoneSet == null))
                {
                    _SuplierPhoneSet = base.CreateObjectSet<SuplierPhone>("SuplierPhoneSet");
                }
                return _SuplierPhoneSet;
            }
        }
        private ObjectSet<SuplierPhone> _SuplierPhoneSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SuplierMail> SuplierMailSet
        {
            get
            {
                if ((_SuplierMailSet == null))
                {
                    _SuplierMailSet = base.CreateObjectSet<SuplierMail>("SuplierMailSet");
                }
                return _SuplierMailSet;
            }
        }
        private ObjectSet<SuplierMail> _SuplierMailSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Office> OfficeSet
        {
            get
            {
                if ((_OfficeSet == null))
                {
                    _OfficeSet = base.CreateObjectSet<Office>("OfficeSet");
                }
                return _OfficeSet;
            }
        }
        private ObjectSet<Office> _OfficeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficePhone> OfficePhoneSet
        {
            get
            {
                if ((_OfficePhoneSet == null))
                {
                    _OfficePhoneSet = base.CreateObjectSet<OfficePhone>("OfficePhoneSet");
                }
                return _OfficePhoneSet;
            }
        }
        private ObjectSet<OfficePhone> _OfficePhoneSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficeMail> OfficeMailSet
        {
            get
            {
                if ((_OfficeMailSet == null))
                {
                    _OfficeMailSet = base.CreateObjectSet<OfficeMail>("OfficeMailSet");
                }
                return _OfficeMailSet;
            }
        }
        private ObjectSet<OfficeMail> _OfficeMailSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductsFamilies> ProductsFamiliesSet
        {
            get
            {
                if ((_ProductsFamiliesSet == null))
                {
                    _ProductsFamiliesSet = base.CreateObjectSet<ProductsFamilies>("ProductsFamiliesSet");
                }
                return _ProductsFamiliesSet;
            }
        }
        private ObjectSet<ProductsFamilies> _ProductsFamiliesSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficeStock> OfficeStockSet
        {
            get
            {
                if ((_OfficeStockSet == null))
                {
                    _OfficeStockSet = base.CreateObjectSet<OfficeStock>("OfficeStockSet");
                }
                return _OfficeStockSet;
            }
        }
        private ObjectSet<OfficeStock> _OfficeStockSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductPrice> ProductPriceSet
        {
            get
            {
                if ((_ProductPriceSet == null))
                {
                    _ProductPriceSet = base.CreateObjectSet<ProductPrice>("ProductPriceSet");
                }
                return _ProductPriceSet;
            }
        }
        private ObjectSet<ProductPrice> _ProductPriceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OnlineProduct> OnlineProductSet
        {
            get
            {
                if ((_OnlineProductSet == null))
                {
                    _OnlineProductSet = base.CreateObjectSet<OnlineProduct>("OnlineProductSet");
                }
                return _OnlineProductSet;
            }
        }
        private ObjectSet<OnlineProduct> _OnlineProductSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shipment> ShipmentSet
        {
            get
            {
                if ((_ShipmentSet == null))
                {
                    _ShipmentSet = base.CreateObjectSet<Shipment>("ShipmentSet");
                }
                return _ShipmentSet;
            }
        }
        private ObjectSet<Shipment> _ShipmentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipmentProductStock> ShipmentProductStockSet
        {
            get
            {
                if ((_ShipmentProductStockSet == null))
                {
                    _ShipmentProductStockSet = base.CreateObjectSet<ShipmentProductStock>("ShipmentProductStockSet");
                }
                return _ShipmentProductStockSet;
            }
        }
        private ObjectSet<ShipmentProductStock> _ShipmentProductStockSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandSet(Brand brand)
        {
            base.AddObject("BrandSet", brand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FamilySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamilySet(Family family)
        {
            base.AddObject("FamilySet", family);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSet(Product product)
        {
            base.AddObject("ProductSet", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SuplierSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuplierSet(Suplier suplier)
        {
            base.AddObject("SuplierSet", suplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SuplierPhoneSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuplierPhoneSet(SuplierPhone suplierPhone)
        {
            base.AddObject("SuplierPhoneSet", suplierPhone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SuplierMailSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuplierMailSet(SuplierMail suplierMail)
        {
            base.AddObject("SuplierMailSet", suplierMail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficeSet(Office office)
        {
            base.AddObject("OfficeSet", office);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficePhoneSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficePhoneSet(OfficePhone officePhone)
        {
            base.AddObject("OfficePhoneSet", officePhone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficeMailSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficeMailSet(OfficeMail officeMail)
        {
            base.AddObject("OfficeMailSet", officeMail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductsFamiliesSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductsFamiliesSet(ProductsFamilies productsFamilies)
        {
            base.AddObject("ProductsFamiliesSet", productsFamilies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficeStockSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficeStockSet(OfficeStock officeStock)
        {
            base.AddObject("OfficeStockSet", officeStock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductPriceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductPriceSet(ProductPrice productPrice)
        {
            base.AddObject("ProductPriceSet", productPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OnlineProductSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOnlineProductSet(OnlineProduct onlineProduct)
        {
            base.AddObject("OnlineProductSet", onlineProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShipmentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipmentSet(Shipment shipment)
        {
            base.AddObject("ShipmentSet", shipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShipmentProductStockSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipmentProductStockSet(ShipmentProductStock shipmentProductStock)
        {
            base.AddObject("ShipmentProductStockSet", shipmentProductStock);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static Brand CreateBrand(global::System.String name)
        {
            Brand brand = new Brand();
            brand.Name = name;
            return brand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "BrandProduct", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("Model.BrandProduct", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("Model.BrandProduct", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Family")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Family : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Family object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Family CreateFamily(global::System.String name, global::System.String description)
        {
            Family family = new Family();
            family.Name = name;
            family.Description = description;
            return family;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FamilyProductsFamilies", "ProductsFamilies")]
        public EntityCollection<ProductsFamilies> ProductsFamilies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsFamilies>("Model.FamilyProductsFamilies", "ProductsFamilies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsFamilies>("Model.FamilyProductsFamilies", "ProductsFamilies", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Office")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Office : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Office object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Office CreateOffice(global::System.Int32 id, global::System.String name, global::System.String address)
        {
            Office office = new Office();
            office.Id = id;
            office.Name = name;
            office.Address = address;
            return office;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeOfficePhone", "OfficePhone")]
        public EntityCollection<OfficePhone> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficePhone>("Model.OfficeOfficePhone", "OfficePhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficePhone>("Model.OfficeOfficePhone", "OfficePhone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeOfficeMail", "OfficeMail")]
        public EntityCollection<OfficeMail> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficeMail>("Model.OfficeOfficeMail", "OfficeMail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficeMail>("Model.OfficeOfficeMail", "OfficeMail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeProductsOffices", "ProductsOffices")]
        public EntityCollection<OfficeStock> ProductsOffices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficeStock>("Model.OfficeProductsOffices", "ProductsOffices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficeStock>("Model.OfficeProductsOffices", "ProductsOffices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "InboundShipment", "Shipment")]
        public Shipment InboundShipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.InboundShipment", "Shipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.InboundShipment", "Shipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> InboundShipmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.InboundShipment", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipment>("Model.InboundShipment", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OutboundShipment", "Shipment")]
        public Shipment OutboundShipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.OutboundShipment", "Shipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.OutboundShipment", "Shipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> OutboundShipmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.OutboundShipment", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipment>("Model.OutboundShipment", "Shipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OfficeMail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficeMail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficeMail object.
        /// </summary>
        /// <param name="email">Initial value of the Email property.</param>
        public static OfficeMail CreateOfficeMail(global::System.String email)
        {
            OfficeMail officeMail = new OfficeMail();
            officeMail.Email = email;
            return officeMail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeOfficeMail", "Office")]
        public Office Office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficeMail", "Office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficeMail", "Office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Office> OfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficeMail", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Office>("Model.OfficeOfficeMail", "Office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OfficePhone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficePhone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficePhone object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        public static OfficePhone CreateOfficePhone(global::System.Int32 number)
        {
            OfficePhone officePhone = new OfficePhone();
            officePhone.Number = number;
            return officePhone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                if (_Number != value)
                {
                    OnNumberChanging(value);
                    ReportPropertyChanging("Number");
                    _Number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeOfficePhone", "Office")]
        public Office Office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficePhone", "Office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficePhone", "Office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Office> OfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeOfficePhone", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Office>("Model.OfficeOfficePhone", "Office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OfficeStock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficeStock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficeStock object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="officeId">Initial value of the OfficeId property.</param>
        /// <param name="stock">Initial value of the Stock property.</param>
        public static OfficeStock CreateOfficeStock(global::System.Int32 productId, global::System.Int32 officeId, global::System.Int32 stock)
        {
            OfficeStock officeStock = new OfficeStock();
            officeStock.ProductId = productId;
            officeStock.OfficeId = officeId;
            officeStock.Stock = stock;
            return officeStock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfficeId
        {
            get
            {
                return _OfficeId;
            }
            set
            {
                if (_OfficeId != value)
                {
                    OnOfficeIdChanging(value);
                    ReportPropertyChanging("OfficeId");
                    _OfficeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OfficeId");
                    OnOfficeIdChanged();
                }
            }
        }
        private global::System.Int32 _OfficeId;
        partial void OnOfficeIdChanging(global::System.Int32 value);
        partial void OnOfficeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductsOffices", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsOffices", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsOffices", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsOffices", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.ProductProductsOffices", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OfficeProductsOffices", "Office")]
        public Office Office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeProductsOffices", "Office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeProductsOffices", "Office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Office> OfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Office>("Model.OfficeProductsOffices", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Office>("Model.OfficeProductsOffices", "Office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="OnlineProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OnlineProduct object.
        /// </summary>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static OnlineProduct CreateOnlineProduct(global::System.String uRL, global::System.Boolean active)
        {
            OnlineProduct onlineProduct = new OnlineProduct();
            onlineProduct.URL = uRL;
            onlineProduct.Active = active;
            return onlineProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                if (_URL != value)
                {
                    OnURLChanging(value);
                    ReportPropertyChanging("URL");
                    _URL = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("URL");
                    OnURLChanged();
                }
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="brandName">Initial value of the BrandName property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.String brandName)
        {
            Product product = new Product();
            product.Id = id;
            product.Name = name;
            product.BrandName = brandName;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "BrandProduct", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Model.BrandProduct", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Model.BrandProduct", "Brand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("Model.BrandProduct", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("Model.BrandProduct", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductsFamilies", "ProductsFamilies")]
        public EntityCollection<ProductsFamilies> ProductsFamilies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsFamilies>("Model.ProductProductsFamilies", "ProductsFamilies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsFamilies>("Model.ProductProductsFamilies", "ProductsFamilies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductsOffices", "ProductsOffices")]
        public EntityCollection<OfficeStock> ProductsOffices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficeStock>("Model.ProductProductsOffices", "ProductsOffices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficeStock>("Model.ProductProductsOffices", "ProductsOffices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductPrice", "ProductPrice")]
        public EntityCollection<ProductPrice> ProductPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductPrice>("Model.ProductProductPrice", "ProductPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductPrice>("Model.ProductProductPrice", "ProductPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductOnlineProduct", "OnlineProduct")]
        public OnlineProduct OnlineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineProduct>("Model.ProductOnlineProduct", "OnlineProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineProduct>("Model.ProductOnlineProduct", "OnlineProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnlineProduct> OnlineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineProduct>("Model.ProductOnlineProduct", "OnlineProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnlineProduct>("Model.ProductOnlineProduct", "OnlineProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductShipmentStock", "ShipmentStock")]
        public EntityCollection<ShipmentProductStock> ShipmentStock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShipmentProductStock>("Model.ProductShipmentStock", "ShipmentStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShipmentProductStock>("Model.ProductShipmentStock", "ShipmentStock", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProductPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductPrice object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="suplierId">Initial value of the SuplierId property.</param>
        public static ProductPrice CreateProductPrice(global::System.DateTime date, global::System.Decimal price, global::System.Int32 productId, global::System.Int32 suplierId)
        {
            ProductPrice productPrice = new ProductPrice();
            productPrice.Date = date;
            productPrice.Price = price;
            productPrice.ProductId = productId;
            productPrice.SuplierId = suplierId;
            return productPrice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuplierId
        {
            get
            {
                return _SuplierId;
            }
            set
            {
                OnSuplierIdChanging(value);
                ReportPropertyChanging("SuplierId");
                _SuplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuplierId");
                OnSuplierIdChanged();
            }
        }
        private global::System.Int32 _SuplierId;
        partial void OnSuplierIdChanging(global::System.Int32 value);
        partial void OnSuplierIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductPrice", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductPrice", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductPrice", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductPrice", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.ProductProductPrice", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierProductPrice", "Suplier")]
        public Suplier Suplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierProductPrice", "Suplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierProductPrice", "Suplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suplier> SuplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierProductPrice", "Suplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Suplier>("Model.SuplierProductPrice", "Suplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProductsFamilies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductsFamilies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductsFamilies object.
        /// </summary>
        /// <param name="familyName">Initial value of the FamilyName property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static ProductsFamilies CreateProductsFamilies(global::System.String familyName, global::System.Int32 productId)
        {
            ProductsFamilies productsFamilies = new ProductsFamilies();
            productsFamilies.FamilyName = familyName;
            productsFamilies.ProductId = productId;
            return productsFamilies;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FamilyName
        {
            get
            {
                return _FamilyName;
            }
            set
            {
                if (_FamilyName != value)
                {
                    OnFamilyNameChanging(value);
                    ReportPropertyChanging("FamilyName");
                    _FamilyName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FamilyName");
                    OnFamilyNameChanged();
                }
            }
        }
        private global::System.String _FamilyName;
        partial void OnFamilyNameChanging(global::System.String value);
        partial void OnFamilyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FamilyProductsFamilies", "Family")]
        public Family Family
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("Model.FamilyProductsFamilies", "Family").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("Model.FamilyProductsFamilies", "Family").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Family> FamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("Model.FamilyProductsFamilies", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Family>("Model.FamilyProductsFamilies", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductProductsFamilies", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsFamilies", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsFamilies", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductProductsFamilies", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.ProductProductsFamilies", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Shipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shipment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="shippedDate">Initial value of the ShippedDate property.</param>
        /// <param name="deliveredDate">Initial value of the DeliveredDate property.</param>
        public static Shipment CreateShipment(global::System.Int32 id, global::System.String status, global::System.String shippedDate, global::System.String deliveredDate)
        {
            Shipment shipment = new Shipment();
            shipment.Id = id;
            shipment.Status = status;
            shipment.ShippedDate = shippedDate;
            shipment.DeliveredDate = deliveredDate;
            return shipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShippedDate
        {
            get
            {
                return _ShippedDate;
            }
            set
            {
                OnShippedDateChanging(value);
                ReportPropertyChanging("ShippedDate");
                _ShippedDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShippedDate");
                OnShippedDateChanged();
            }
        }
        private global::System.String _ShippedDate;
        partial void OnShippedDateChanging(global::System.String value);
        partial void OnShippedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveredDate
        {
            get
            {
                return _DeliveredDate;
            }
            set
            {
                OnDeliveredDateChanging(value);
                ReportPropertyChanging("DeliveredDate");
                _DeliveredDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveredDate");
                OnDeliveredDateChanged();
            }
        }
        private global::System.String _DeliveredDate;
        partial void OnDeliveredDateChanging(global::System.String value);
        partial void OnDeliveredDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductShipmentShipmentStock", "ShipmentStock")]
        public EntityCollection<ShipmentProductStock> ShipmentStock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShipmentProductStock>("Model.ProductShipmentShipmentStock", "ShipmentStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShipmentProductStock>("Model.ProductShipmentShipmentStock", "ShipmentStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "InboundShipment", "Office")]
        public EntityCollection<Office> DestinationOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Office>("Model.InboundShipment", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Office>("Model.InboundShipment", "Office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "OutboundShipment", "Office")]
        public EntityCollection<Office> OriginOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Office>("Model.OutboundShipment", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Office>("Model.OutboundShipment", "Office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ShipmentProductStock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipmentProductStock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShipmentProductStock object.
        /// </summary>
        /// <param name="productShipmentId">Initial value of the ProductShipmentId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static ShipmentProductStock CreateShipmentProductStock(global::System.Int32 productShipmentId, global::System.Int32 productId, global::System.Int32 amount)
        {
            ShipmentProductStock shipmentProductStock = new ShipmentProductStock();
            shipmentProductStock.ProductShipmentId = productShipmentId;
            shipmentProductStock.ProductId = productId;
            shipmentProductStock.Amount = amount;
            return shipmentProductStock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductShipmentId
        {
            get
            {
                return _ProductShipmentId;
            }
            set
            {
                if (_ProductShipmentId != value)
                {
                    OnProductShipmentIdChanging(value);
                    ReportPropertyChanging("ProductShipmentId");
                    _ProductShipmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductShipmentId");
                    OnProductShipmentIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductShipmentId;
        partial void OnProductShipmentIdChanging(global::System.Int32 value);
        partial void OnProductShipmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductShipmentShipmentStock", "ProductShipment")]
        public Shipment ProductShipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.ProductShipmentShipmentStock", "ProductShipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.ProductShipmentShipmentStock", "ProductShipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> ProductShipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("Model.ProductShipmentShipmentStock", "ProductShipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipment>("Model.ProductShipmentShipmentStock", "ProductShipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ProductShipmentStock", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductShipmentStock", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductShipmentStock", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.ProductShipmentStock", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.ProductShipmentStock", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Suplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Suplier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Suplier CreateSuplier(global::System.Int32 id, global::System.String name)
        {
            Suplier suplier = new Suplier();
            suplier.Id = id;
            suplier.Name = name;
            return suplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierSuplierPhone", "SuplierPhone")]
        public EntityCollection<SuplierPhone> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SuplierPhone>("Model.SuplierSuplierPhone", "SuplierPhone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SuplierPhone>("Model.SuplierSuplierPhone", "SuplierPhone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierSuplierMail", "SuplierMail")]
        public EntityCollection<SuplierMail> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SuplierMail>("Model.SuplierSuplierMail", "SuplierMail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SuplierMail>("Model.SuplierSuplierMail", "SuplierMail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierProductPrice", "ProductPrice")]
        public EntityCollection<ProductPrice> ProductPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductPrice>("Model.SuplierProductPrice", "ProductPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductPrice>("Model.SuplierProductPrice", "ProductPrice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SuplierMail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuplierMail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SuplierMail object.
        /// </summary>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="suplierId">Initial value of the SuplierId property.</param>
        public static SuplierMail CreateSuplierMail(global::System.String email, global::System.Int32 suplierId)
        {
            SuplierMail suplierMail = new SuplierMail();
            suplierMail.Email = email;
            suplierMail.SuplierId = suplierId;
            return suplierMail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuplierId
        {
            get
            {
                return _SuplierId;
            }
            set
            {
                OnSuplierIdChanging(value);
                ReportPropertyChanging("SuplierId");
                _SuplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuplierId");
                OnSuplierIdChanged();
            }
        }
        private global::System.Int32 _SuplierId;
        partial void OnSuplierIdChanging(global::System.Int32 value);
        partial void OnSuplierIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierSuplierMail", "Suplier")]
        public Suplier Suplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierMail", "Suplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierMail", "Suplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suplier> SuplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierMail", "Suplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Suplier>("Model.SuplierSuplierMail", "Suplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SuplierPhone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuplierPhone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SuplierPhone object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="suplierId">Initial value of the SuplierId property.</param>
        public static SuplierPhone CreateSuplierPhone(global::System.String number, global::System.Int32 suplierId)
        {
            SuplierPhone suplierPhone = new SuplierPhone();
            suplierPhone.Number = number;
            suplierPhone.SuplierId = suplierId;
            return suplierPhone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                if (_Number != value)
                {
                    OnNumberChanging(value);
                    ReportPropertyChanging("Number");
                    _Number = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuplierId
        {
            get
            {
                return _SuplierId;
            }
            set
            {
                OnSuplierIdChanging(value);
                ReportPropertyChanging("SuplierId");
                _SuplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuplierId");
                OnSuplierIdChanged();
            }
        }
        private global::System.Int32 _SuplierId;
        partial void OnSuplierIdChanging(global::System.Int32 value);
        partial void OnSuplierIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SuplierSuplierPhone", "Suplier")]
        public Suplier Suplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierPhone", "Suplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierPhone", "Suplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suplier> SuplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suplier>("Model.SuplierSuplierPhone", "Suplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Suplier>("Model.SuplierSuplierPhone", "Suplier", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
